use <parts.scad>
use <utils.scad>

$fn=10;

module frontSuspension(print = false)
{
  if(print)
  {
  }
  else
  {
    translate([0,-3.5,-1.5])
    frontSuspensionLowerArm();
    translate([0,-5,20])
    frontSuspensionUpperArm();
    translate([20,0,2])
    frontSuspensionPivot();
  }
}

module frontSuspensionLowerArm()
{
  l=20;
  w=7;
  h=3;
  difference()
  {
    union()
    {
      cube([l,w,h]);
      translate([l,w/2,0]) cylinder(r=w/2,h=h);
      translate([0,0,h/2]) rotate([-90,0,0]) cylinder(r=h/2,h=w);
    }
    translate([l,w/2,-1]) cylinder(r=2,h=h+2);
    translate([0,-1,h/2]) rotate([-90,0,0]) cylinder(r=1,h=w+2);
  }
}

module frontSuspensionUpperArm()
{
  h=3.5;
  w=10;
  l=17;
  
  centerX = 2;
  centerW = 5;
  centerL = l-centerX+h;
  centerH = h+2;
  
  axisradius = 1;
  
  difference()
  {
    union()
    {
      cube([l,w,h]);
      translate([0,0,h/2])
        rotate([-90,0,0]) cylinder(r=h/2,h=w);
      translate([l,0,h/2])
        rotate([-90,0,0]) cylinder(r=h/2,h=w);
    }
    
    for(x=[0,10])
      translate([x,-1,h/2])
        rotate([-90,0,0]) cylinder(r=axisradius,h=w+2);
    
    translate([centerX+centerW/2, w/2-centerW/2,-1])
      union()
      {
        cube([centerL,centerW,centerH]);
        translate([0,centerW/2,0]) cylinder(r=centerW/2, h=centerH);
      }
  }
  translate([l,0,h/2])
    rotate([-90,0,0]) cylinder(r=axisradius,h=w);
}

module frontSuspensionPivot(print=false)
{
  l=25; //
  w=30; // base plate
  h=3;  //
  
  offsetX = 10; //
  offsetY = 0;  // offset to the base rotation point
  offsetZ = 0;  //
  
  l1=7;   //
  w1=w;   // upper part
  h1=17;  //
  
  rc=2; //the radius of the screws (holes in the base plate)
  
  translate([0,0,-4])
  cylinder(r=2,h=4);
  translate([offsetX,offsetY,offsetZ])
  {
    translate([-l,-w/2,0])
    {
      difference()
      {
        union()
        {
          difference()
          {
            cube([l,w,h]);
            translate([0,w,-1]) rotate([0,0,90])
              quarterCircle(r=10,h=h+2,invert=true,expand=true);
            translate([0,0,-1]) rotate([0,0,-180])
              quarterCircle(r=10,h=h+2,invert=true,expand=true);
            translate([12,6,-1])
            {
              cylinder(r=rc,h=h+2);
              translate([0,18,0])
              cylinder(r=rc,h=h+2);
            }
          }
          translate([l-l1,0,h])
          difference()
          {
              union()
              {
                cube([l1,w1,h1]);
                translate([0,0,0])
                rotate([0,0,0])
                *cylinder(r=2,h=20);
              }
              translate([-1,0,h1]) rotate([180,-90,0])
                quarterCircle(r=5,h=l1+2,invert=true,expand=true);
              translate([l1+1,w,h1]) rotate([0,-90,0])
                quarterCircle(r=5,h=l1+2,invert=true,expand=true);
              translate([-1,7,-1])
                cube([l1+2,16,13]);
              translate([l1,w1+1,h1]) rotate([90,0,0])
                quarterCircle(r=5,h=w1+2,invert=true,expand=true);
          }
        }
        translate([l,0,-1]) rotate([0,0,-90])
            quarterCircle(r=5,h=h+h1+2,invert=true,expand=true);
        translate([l,w,-1]) rotate([0,0,0])
            quarterCircle(r=5,h=h+h1+2,invert=true,expand=true);
      }
    }
    
    if(!print)
      translate([-13,0,h])
        rotate([0,0,-90])
          motorBlock();
  }
}

frontSuspension(print=false);
